#!/bin/bash

# Set globals
LIBDIR=/usr/share/manjaro-arm-tools/lib
BUILDCLEAN=true
INSTALL_NEW=false

# imports
source $LIBDIR/functions.sh
CHROOTDIR=$BUILDDIR/$ARCH
PKG_CACHE=$CHROOTDIR/var/cache/pacman/pkg

# check if root
if [ "$EUID" -ne 0 ]
  then echo "This script requires root permissions to run. Please run as root or with sudo!"
  exit
fi

# Arguments
opt=":p:a:i:r:nb:kh"

while getopts "${opt}" arg; do
  case $arg in
    p)
      PACKAGE="${OPTARG%/}"
      ;;
    a)
      ARCH="${OPTARG}"
      ;;
    k)
      BUILDCLEAN=false
      ;;
    b)
      BRANCH="${OPTARG}"
      ;;
    i)
      ADD_PACKAGE="${OPTARG}"
      ;;
    n)
      INSTALL_NEW=true
      ;;
    r)
      CUSTOM_REPO="${OPTARG}"
     ;;
    \?)
      echo "Invalid option: -${OPTARG}"
      exit 1
      ;;
    h|?)
      usage_build_pkg
      exit 1
      ;;
    :)
      echo "Option -${OPTARG} requires an argument."
      exit 1
      ;;
  esac
done

enable_colors

# Need both package and architecture
if [ "x" == "x$PACKAGE" ]; then
  echo "-p [option] is required"
  exit
fi

# Build the 'any' packages on aarch64
if [ $ARCH == "any" ]; then
    ARCH="aarch64"
fi

# Make sure only a known branch is used
if [[ "$BRANCH" != "stable" && "$BRANCH" != "testing" && "$BRANCH" != "unstable" ]]; then
    msg "Unknown branch. Please use either, stable, testing or unstable!"
    exit 1
fi

# start the timer
timer_start=$(get_timer)

if [[ "$BUILDCLEAN" = "false" && ! -d $CHROOTDIR ]]; then
    msg "Rootfs does not exist. Please run this command again without the -k option to generate a rootfs to use..."
    exit 1
elif [[ "$BUILDCLEAN" = "true" ]]; then
    # create the rootfs to build in
    create_rootfs_pkg
fi

# build the package
build_pkg

# export the package and clean up
export_and_clean
prune_cache

# show timer
show_elapsed_time "${FUNCNAME}" "${timer_start}"
